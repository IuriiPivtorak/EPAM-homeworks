#!/usr/bin/env python
"""
Script for similar_files UI module
"""

import os
import sys
from PyQt5.QtWidgets import QMainWindow, QApplication, QPushButton, QLineEdit, QMessageBox, QErrorMessage
from PyQt5.QtCore import pyqtSlot

from supertool.abc import directory_check


class App(QMainWindow):
    """
    Class for application.

    """
    def __init__(self):
        super().__init__()
        self.title = 'Input directory path:'
        self.left = 400
        self.top = 400
        self.width = 400
        self.height = 140
        self.initUI()

    def initUI(self):
        """
        Textbox creation method

        :returns: None -- shows textbox.
        """
        self.setWindowTitle(self.title)
        self.setGeometry(self.left, self.top, self.width, self.height)

        self.textbox = QLineEdit(self)
        self.textbox.move(20, 20)
        self.textbox.resize(280, 40)

        self.button = QPushButton('Make file comparison', self)
        self.button.move(20, 80)

        self.button.clicked.connect(self.on_click)
        self.show()

    @pyqtSlot()
    def on_click(self):
        """
        Sets operations when ok button is clicked.

        :returns: None -- shows result of operation.
        """
        try:
            directory = self.textbox.text()
            sys.stdout = open('results.txt', 'w')
            directory_check(directory)
            sys.stdout = sys.__stdout__
            with open('results.txt') as file_2:
                lines = file_2.readlines()
                result = ''
                for line in lines:
                    result += str(line)
                QMessageBox.question(self, 'Files comparison', result, QMessageBox.Ok,
                                     QMessageBox.Ok)
                self.textbox.setText('')
        finally:
            os.remove('results.txt')


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = App()
    sys.exit(app.exec_())
